POPS: proced oriented prog s
OOPS :object ori prog s
    cpp,java,python

1)encapsulation : binding code and data into a single unit
2)abstraction : hiding the implementation details
3)inheritance : acquiring the properties from parent class to child class
4)polymorphism : many forms
    method overloading
    method overriding



inheritance:
child class can use the properties of parent class this process is called inheritance, but parent class 
can't use the properties of child class
base class --> parent class
derived class --> child class

types of inheritance:
1)single inheritance    a -> b
2)multiple inheritance  a -> b,c | a,b -> c
3)multilevel inheritance a -> b -> c
4)hierarchical inheritance a -> b,c
                            a
                   b                c           
             x          y    p           q

5)hybrid inheritance a -> b,c -> d | a -> b -> c,d
                    a
            b               c
                d


use:
1)code reusability


polymorphism : many form of the function..
1)compile time polymorphism / static binding / early binding / 
    function overloading
----------------------------------------------------------------

2)run time polymorphism / dynamic binding / late binding / 
    function overriding    

run time polymorphism : parent class function created in child class with same signature called function overriding

signature : function name, return type, arguments, access specifiers



overloading:
1)function overloading : same name of function created in same class but with diff arguments called function overal

search(string pname)
search(string pname,int model)
search(int model,string pname)
search(string pname,int model,string color)

zomato

order(string fname)
order(string fname,int qty)
order(int qty,int price)


constructor:

def: constructor is a special member function which has same name as class name
constructor doesn't have return type
but constructor can have arguments

type of constructor:
1)default constructor : no arguments
2)parameterized constructor : with arguments
3)copy constructor : copy the value of one object to another object

use: to initialize the object,and instance variables of the class

in cpp class must have atleast one constructor
if programmer doesn't create any constructor then compiler will create default constructor

constructor will be called automatically when object is created